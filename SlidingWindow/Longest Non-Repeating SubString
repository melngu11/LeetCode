
class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        int size = s.size();
        int maxLength = 0;
        unordered_map<char, int> myMap;
        int start = 0;

        for(int end = 0; end < size; end++){
            myMap[s[end]]++;
            while(myMap[s[end]] > 1 || s[start] == s[start+1] && start <= end) {
                myMap[s[start]]--;
                start++;
            }
            maxLength = max(maxLength, end - start + 1);
        }
    return maxLength;
    }

};
O(n)
