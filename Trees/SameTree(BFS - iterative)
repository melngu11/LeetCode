/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isSameTree(TreeNode* p, TreeNode* q) {
        //BFS -> Check each layer at a time
        queue<TreeNode*> que;

        que.push(p);
        que.push(q);

        while(!que.empty()){
            TreeNode* nodeP = que.front();
            que.pop();
            TreeNode* nodeQ = que.front();
            que.pop();

            if(!nodeP && !nodeQ){
                continue;
            }
            if(!nodeP || !nodeQ){
                return false;
            }
            if(nodeP->val != nodeQ->val){
                return false;
            }

            que.push(nodeP->left);
            que.push(nodeQ->left);

            que.push(nodeP->right);
            que.push(nodeQ->right);
        }
        return true;


    }
};
